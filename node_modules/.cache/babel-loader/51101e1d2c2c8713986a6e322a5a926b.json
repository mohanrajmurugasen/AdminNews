{"ast":null,"code":"import React from'react';import{useLocation}from'react-router-dom';import routes from'../routes';import{CBreadcrumb,CBreadcrumbItem}from'@coreui/react';import{jsx as _jsx}from\"react/jsx-runtime\";import{createElement as _createElement}from\"react\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const AppBreadcrumb=()=>{const currentLocation=useLocation().pathname;const getRouteName=(pathname,routes)=>{const currentRoute=routes.find(route=>route.path===pathname);return currentRoute.name;};const getBreadcrumbs=location=>{const breadcrumbs=[];location.split('/').reduce((prev,curr,index,array)=>{const currentPathname=\"\".concat(prev,\"/\").concat(curr);breadcrumbs.push({pathname:currentPathname,name:getRouteName(currentPathname,routes),active:index+1===array.length?true:false});return currentPathname;});return breadcrumbs;};const breadcrumbs=getBreadcrumbs(currentLocation);return/*#__PURE__*/_jsxs(CBreadcrumb,{className:\"m-0 ms-2\",children:[/*#__PURE__*/_jsx(CBreadcrumbItem,{href:\"/\",children:\"Home\"}),breadcrumbs.map((breadcrumb,index)=>{return/*#__PURE__*/_createElement(CBreadcrumbItem,{...(breadcrumb.active?{active:true}:{href:breadcrumb.pathname}),key:index},breadcrumb.name);})]});};export default/*#__PURE__*/React.memo(AppBreadcrumb);","map":{"version":3,"sources":["/Users/apple/Desktop/Projects/NewsApplication/AdminNews/src/components/AppBreadcrumb.js"],"names":["React","useLocation","routes","CBreadcrumb","CBreadcrumbItem","AppBreadcrumb","currentLocation","pathname","getRouteName","currentRoute","find","route","path","name","getBreadcrumbs","location","breadcrumbs","split","reduce","prev","curr","index","array","currentPathname","push","active","length","map","breadcrumb","href","memo"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,WAAT,KAA4B,kBAA5B,CAEA,MAAOC,CAAAA,MAAP,KAAmB,WAAnB,CAEA,OAASC,WAAT,CAAsBC,eAAtB,KAA6C,eAA7C,C,2IAEA,KAAMC,CAAAA,aAAa,CAAG,IAAM,CAC1B,KAAMC,CAAAA,eAAe,CAAGL,WAAW,GAAGM,QAAtC,CAEA,KAAMC,CAAAA,YAAY,CAAG,CAACD,QAAD,CAAWL,MAAX,GAAsB,CACzC,KAAMO,CAAAA,YAAY,CAAGP,MAAM,CAACQ,IAAP,CAAaC,KAAD,EAAWA,KAAK,CAACC,IAAN,GAAeL,QAAtC,CAArB,CACA,MAAOE,CAAAA,YAAY,CAACI,IAApB,CACD,CAHD,CAKA,KAAMC,CAAAA,cAAc,CAAIC,QAAD,EAAc,CACnC,KAAMC,CAAAA,WAAW,CAAG,EAApB,CACAD,QAAQ,CAACE,KAAT,CAAe,GAAf,EAAoBC,MAApB,CAA2B,CAACC,IAAD,CAAOC,IAAP,CAAaC,KAAb,CAAoBC,KAApB,GAA8B,CACvD,KAAMC,CAAAA,eAAe,WAAMJ,IAAN,aAAcC,IAAd,CAArB,CACAJ,WAAW,CAACQ,IAAZ,CAAiB,CACfjB,QAAQ,CAAEgB,eADK,CAEfV,IAAI,CAAEL,YAAY,CAACe,eAAD,CAAkBrB,MAAlB,CAFH,CAGfuB,MAAM,CAAEJ,KAAK,CAAG,CAAR,GAAcC,KAAK,CAACI,MAApB,CAA6B,IAA7B,CAAoC,KAH7B,CAAjB,EAKA,MAAOH,CAAAA,eAAP,CACD,CARD,EASA,MAAOP,CAAAA,WAAP,CACD,CAZD,CAcA,KAAMA,CAAAA,WAAW,CAAGF,cAAc,CAACR,eAAD,CAAlC,CAEA,mBACE,MAAC,WAAD,EAAa,SAAS,CAAC,UAAvB,wBACE,KAAC,eAAD,EAAiB,IAAI,CAAC,GAAtB,kBADF,CAEGU,WAAW,CAACW,GAAZ,CAAgB,CAACC,UAAD,CAAaP,KAAb,GAAuB,CACtC,mBACE,eAAC,eAAD,MACOO,UAAU,CAACH,MAAX,CAAoB,CAAEA,MAAM,CAAE,IAAV,CAApB,CAAuC,CAAEI,IAAI,CAAED,UAAU,CAACrB,QAAnB,CAD9C,EAEE,GAAG,CAAEc,KAFP,EAIGO,UAAU,CAACf,IAJd,CADF,CAQD,CATA,CAFH,GADF,CAeD,CAvCD,CAyCA,2BAAeb,KAAK,CAAC8B,IAAN,CAAWzB,aAAX,CAAf","sourcesContent":["import React from 'react'\nimport { useLocation } from 'react-router-dom'\n\nimport routes from '../routes'\n\nimport { CBreadcrumb, CBreadcrumbItem } from '@coreui/react'\n\nconst AppBreadcrumb = () => {\n  const currentLocation = useLocation().pathname\n\n  const getRouteName = (pathname, routes) => {\n    const currentRoute = routes.find((route) => route.path === pathname)\n    return currentRoute.name\n  }\n\n  const getBreadcrumbs = (location) => {\n    const breadcrumbs = []\n    location.split('/').reduce((prev, curr, index, array) => {\n      const currentPathname = `${prev}/${curr}`\n      breadcrumbs.push({\n        pathname: currentPathname,\n        name: getRouteName(currentPathname, routes),\n        active: index + 1 === array.length ? true : false,\n      })\n      return currentPathname\n    })\n    return breadcrumbs\n  }\n\n  const breadcrumbs = getBreadcrumbs(currentLocation)\n\n  return (\n    <CBreadcrumb className=\"m-0 ms-2\">\n      <CBreadcrumbItem href=\"/\">Home</CBreadcrumbItem>\n      {breadcrumbs.map((breadcrumb, index) => {\n        return (\n          <CBreadcrumbItem\n            {...(breadcrumb.active ? { active: true } : { href: breadcrumb.pathname })}\n            key={index}\n          >\n            {breadcrumb.name}\n          </CBreadcrumbItem>\n        )\n      })}\n    </CBreadcrumb>\n  )\n}\n\nexport default React.memo(AppBreadcrumb)\n"]},"metadata":{},"sourceType":"module"}