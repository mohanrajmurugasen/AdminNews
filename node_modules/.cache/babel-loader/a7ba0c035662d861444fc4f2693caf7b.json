{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/Projects/NewsApplication/AdminNews/src/views/base/allnews/EditNews.js\";\nimport React, { useEffect, useState } from 'react';\nimport '../../../assets/css/allnews.css';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { Button } from '@material-ui/core';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport PropTypes from 'prop-types';\nimport authAxios from 'src/interceptors/interceptor';\nimport { withStyles } from '@material-ui/core/styles';\nimport Switch from '@material-ui/core/Switch';\nimport Grid from '@material-ui/core/Grid';\nimport { useForm } from 'react-hook-form';\nimport { Controller } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AntSwitch = withStyles(theme => ({\n  root: {\n    width: 28,\n    height: 16,\n    padding: 0,\n    display: 'flex'\n  },\n  switchBase: {\n    padding: 2,\n    color: theme.palette.grey[500],\n    '&$checked': {\n      transform: 'translateX(12px)',\n      color: theme.palette.common.white,\n      '& + $track': {\n        opacity: 1,\n        backgroundColor: theme.palette.primary.main,\n        borderColor: theme.palette.primary.main\n      }\n    }\n  },\n  thumb: {\n    width: 12,\n    height: 12,\n    boxShadow: 'none'\n  },\n  track: {\n    border: \"1px solid \".concat(theme.palette.grey[500]),\n    borderRadius: 16 / 2,\n    opacity: 1,\n    backgroundColor: theme.palette.common.white\n  },\n  checked: {}\n}))(Switch);\nexport default function EditNews(_ref) {\n  let {\n    setDirect,\n    newsId\n  } = _ref;\n  const [category, setCategory] = useState([]);\n  const [editor, seteditor] = useState([]);\n  const [speciality, setspeciality] = useState([]);\n  const [state, setState] = useState(null);\n  const [state1, setState1] = useState(null);\n  const {\n    register,\n    control,\n    handleSubmit\n  } = useForm();\n  const [title, settitle] = useState(null);\n  const [summary, setsummary] = useState(null);\n  const [description, setdescription] = useState(null);\n  const [video, setvideo] = useState(null);\n  const [image, setimage] = useState(); // const [category1, setcategory1] = useState(null)\n  // const [speciality1, setspeciality1] = useState(null)\n  // const [editor1, seteditor1] = useState(null)\n\n  useEffect(() => {\n    const fetch1 = async () => {\n      await authAxios.get(\"getAllNewsById/\".concat(newsId)).then(res => {\n        settitle(res.data.title);\n        setsummary(res.data.summary);\n        setdescription(res.data.description);\n        setvideo(res.data.video); // setimage(res.data.image)\n\n        setState1(res.data.publish);\n        setState(res.data.breaking); // setcategory1(res.data.category1)\n        // setspeciality1(res.data.speciality1)\n        // seteditor1(res.data.editor1)\n      }).catch(err => {\n        console.error(err.message);\n      });\n    };\n\n    fetch1();\n  }, [newsId]);\n  useEffect(() => {\n    const fetch = async () => {\n      await authAxios.get('allCategory').then(res => {\n        setCategory(res.data);\n      }).catch(err => {\n        console.error(err.message);\n      });\n      await authAxios.get('getAllEditor').then(res => {\n        seteditor(res.data);\n      }).catch(err => {\n        console.error(err.message);\n      });\n      await authAxios.get('allSpeciality').then(res => {\n        setspeciality(res.data);\n      }).catch(err => {\n        console.error(err.message);\n      });\n    };\n\n    fetch();\n  }, []);\n\n  const handleChange = event => {\n    setState(!state);\n  };\n\n  const handleChange1 = event => {\n    setState1(!state1);\n  };\n\n  const onFileChange = event => {\n    setimage(event.target.files[0]);\n  };\n\n  const onSubmit = data => {\n    const formData = new FormData();\n    formData.append('title', title);\n    formData.append('summary', summary);\n    formData.append('description', description);\n    formData.append('category', data.category);\n    formData.append('speciality', data.speciality);\n    formData.append('reporter', data.reporter);\n    formData.append('image', image);\n    formData.append('video', video);\n    formData.append('publish', state1);\n    formData.append('breaking', state);\n    authAxios.put(\"updateAllNews/\".concat(newsId), formData).then(res => {\n      alert(res.data);\n      setDirect('');\n    }).catch(err => {\n      console.error(err.message);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Enter title\",\n            className: \"inputs\",\n            value: title,\n            onChange: e => settitle(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            children: \"Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            rows: \"4\",\n            className: \"inputsText\",\n            value: summary,\n            onChange: e => setsummary(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            rows: \"4\",\n            className: \"inputsText\",\n            value: description,\n            onChange: e => setdescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            children: \"News Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            control: control,\n            name: \"category\",\n            defaultValue: \"false\",\n            inputRef: register(),\n            render: _ref2 => {\n              let {\n                field: {\n                  onChange\n                }\n              } = _ref2;\n              return /*#__PURE__*/_jsxDEV(Autocomplete, {\n                id: \"custom-input-demo\",\n                options: category.map(itm => itm.name),\n                onChange: (event, newValue) => onChange(newValue),\n                renderInput: params => /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: params.InputProps.ref,\n                  style: {\n                    width: '100%',\n                    borderRadius: '4px',\n                    border: '1px solid darkgray'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    placeholder: \"Select\",\n                    ...params.inputProps,\n                    className: \"autoCompletes\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 213,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(KeyboardArrowDownIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 17\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            children: \"News Speciality\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            control: control,\n            name: \"speciality\",\n            defaultValue: \"false\",\n            inputRef: register(),\n            render: _ref3 => {\n              let {\n                field: {\n                  onChange\n                }\n              } = _ref3;\n              return /*#__PURE__*/_jsxDEV(Autocomplete, {\n                id: \"custom-input-demo\",\n                options: speciality.map(itm => itm.name),\n                onChange: (event, newValue) => onChange(newValue),\n                renderInput: params => /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: params.InputProps.ref,\n                  style: {\n                    width: '100%',\n                    borderRadius: '4px',\n                    border: '1px solid darkgray'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    placeholder: \"Select\",\n                    ...params.inputProps,\n                    className: \"autoCompletes\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 247,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(KeyboardArrowDownIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 17\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            children: \"News Reporter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            control: control,\n            name: \"reporter\",\n            defaultValue: \"false\",\n            inputRef: register(),\n            render: _ref4 => {\n              let {\n                field: {\n                  onChange\n                }\n              } = _ref4;\n              return /*#__PURE__*/_jsxDEV(Autocomplete, {\n                id: \"custom-input-demo\",\n                options: editor.map(itm => itm.username),\n                onChange: (event, newValue) => onChange(newValue),\n                renderInput: params => /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: params.InputProps.ref,\n                  style: {\n                    width: '100%',\n                    borderRadius: '4px',\n                    border: '1px solid darkgray'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    placeholder: \"Select\",\n                    ...params.inputProps,\n                    className: \"autoCompletes\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 281,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(KeyboardArrowDownIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 17\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            children: \"Video Link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Paste here\",\n            className: \"inputs\",\n            value: video,\n            onChange: e => setvideo(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            children: \"Images\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: onFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"switch\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"label2\",\n              children: \"Publish/Unpublish\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: '23px'\n            },\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              component: \"label\",\n              container: true,\n              alignItems: \"center\",\n              spacing: 1,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(AntSwitch, {\n                  name: \"publish\",\n                  checked: state1,\n                  onChange: handleChange1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"switch\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"label2\",\n              children: \"Breaking News\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: '23px'\n            },\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              component: \"label\",\n              container: true,\n              alignItems: \"center\",\n              spacing: 1,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(AntSwitch, {\n                  name: \"breaking\",\n                  checked: state,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              marginTop: '25px',\n              backgroundColor: 'green',\n              color: 'white'\n            },\n            variant: \"contained\",\n            type: \"submit\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n}\nEditNews.propTypes = {\n  setDirect: PropTypes.node.isRequired,\n  newsId: PropTypes.node.isRequired\n};","map":{"version":3,"sources":["/Users/apple/Desktop/Projects/NewsApplication/AdminNews/src/views/base/allnews/EditNews.js"],"names":["React","useEffect","useState","Autocomplete","Button","KeyboardArrowDownIcon","PropTypes","authAxios","withStyles","Switch","Grid","useForm","Controller","AntSwitch","theme","root","width","height","padding","display","switchBase","color","palette","grey","transform","common","white","opacity","backgroundColor","primary","main","borderColor","thumb","boxShadow","track","border","borderRadius","checked","EditNews","setDirect","newsId","category","setCategory","editor","seteditor","speciality","setspeciality","state","setState","state1","setState1","register","control","handleSubmit","title","settitle","summary","setsummary","description","setdescription","video","setvideo","image","setimage","fetch1","get","then","res","data","publish","breaking","catch","err","console","error","message","fetch","handleChange","event","handleChange1","onFileChange","target","files","onSubmit","formData","FormData","append","reporter","put","alert","e","value","field","onChange","map","itm","name","newValue","params","InputProps","ref","inputProps","username","marginTop","propTypes","node","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport '../../../assets/css/allnews.css'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport { Button } from '@material-ui/core'\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown'\nimport PropTypes from 'prop-types'\nimport authAxios from 'src/interceptors/interceptor'\nimport { withStyles } from '@material-ui/core/styles'\nimport Switch from '@material-ui/core/Switch'\nimport Grid from '@material-ui/core/Grid'\nimport { useForm } from 'react-hook-form'\nimport { Controller } from 'react-hook-form'\n\nconst AntSwitch = withStyles((theme) => ({\n  root: {\n    width: 28,\n    height: 16,\n    padding: 0,\n    display: 'flex',\n  },\n  switchBase: {\n    padding: 2,\n    color: theme.palette.grey[500],\n    '&$checked': {\n      transform: 'translateX(12px)',\n      color: theme.palette.common.white,\n      '& + $track': {\n        opacity: 1,\n        backgroundColor: theme.palette.primary.main,\n        borderColor: theme.palette.primary.main,\n      },\n    },\n  },\n  thumb: {\n    width: 12,\n    height: 12,\n    boxShadow: 'none',\n  },\n  track: {\n    border: `1px solid ${theme.palette.grey[500]}`,\n    borderRadius: 16 / 2,\n    opacity: 1,\n    backgroundColor: theme.palette.common.white,\n  },\n  checked: {},\n}))(Switch)\n\nexport default function EditNews({ setDirect, newsId }) {\n  const [category, setCategory] = useState([])\n  const [editor, seteditor] = useState([])\n  const [speciality, setspeciality] = useState([])\n  const [state, setState] = useState(null)\n  const [state1, setState1] = useState(null)\n\n  const { register, control, handleSubmit } = useForm()\n\n  const [title, settitle] = useState(null)\n  const [summary, setsummary] = useState(null)\n  const [description, setdescription] = useState(null)\n  const [video, setvideo] = useState(null)\n  const [image, setimage] = useState()\n  // const [category1, setcategory1] = useState(null)\n  // const [speciality1, setspeciality1] = useState(null)\n  // const [editor1, seteditor1] = useState(null)\n\n  useEffect(() => {\n    const fetch1 = async () => {\n      await authAxios\n        .get(`getAllNewsById/${newsId}`)\n        .then((res) => {\n          settitle(res.data.title)\n          setsummary(res.data.summary)\n          setdescription(res.data.description)\n          setvideo(res.data.video)\n          // setimage(res.data.image)\n          setState1(res.data.publish)\n          setState(res.data.breaking)\n          // setcategory1(res.data.category1)\n          // setspeciality1(res.data.speciality1)\n          // seteditor1(res.data.editor1)\n        })\n        .catch((err) => {\n          console.error(err.message)\n        })\n    }\n    fetch1()\n  }, [newsId])\n\n  useEffect(() => {\n    const fetch = async () => {\n      await authAxios\n        .get('allCategory')\n        .then((res) => {\n          setCategory(res.data)\n        })\n        .catch((err) => {\n          console.error(err.message)\n        })\n\n      await authAxios\n        .get('getAllEditor')\n        .then((res) => {\n          seteditor(res.data)\n        })\n        .catch((err) => {\n          console.error(err.message)\n        })\n\n      await authAxios\n        .get('allSpeciality')\n        .then((res) => {\n          setspeciality(res.data)\n        })\n        .catch((err) => {\n          console.error(err.message)\n        })\n    }\n    fetch()\n  }, [])\n\n  const handleChange = (event) => {\n    setState(!state)\n  }\n\n  const handleChange1 = (event) => {\n    setState1(!state1)\n  }\n\n  const onFileChange = (event) => {\n    setimage(event.target.files[0])\n  }\n\n  const onSubmit = (data) => {\n    const formData = new FormData()\n    formData.append('title', title)\n    formData.append('summary', summary)\n    formData.append('description', description)\n    formData.append('category', data.category)\n    formData.append('speciality', data.speciality)\n    formData.append('reporter', data.reporter)\n    formData.append('image', image)\n    formData.append('video', video)\n    formData.append('publish', state1)\n    formData.append('breaking', state)\n\n    authAxios\n      .put(`updateAllNews/${newsId}`, formData)\n      .then((res) => {\n        alert(res.data)\n        setDirect('')\n      })\n      .catch((err) => {\n        console.error(err.message)\n      })\n  }\n\n  return (\n    <div className=\"create\">\n      <div>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <div>\n            <label className=\"label\">Title</label>\n            <br />\n            <input\n              placeholder=\"Enter title\"\n              className=\"inputs\"\n              value={title}\n              onChange={(e) => settitle(e.target.value)}\n            />\n          </div>\n          <div>\n            <label className=\"label\">Summary</label>\n            <br />\n            <textarea\n              rows=\"4\"\n              className=\"inputsText\"\n              value={summary}\n              onChange={(e) => setsummary(e.target.value)}\n            ></textarea>\n          </div>\n          <div>\n            <label className=\"label\">Description</label>\n            <br />\n            <textarea\n              rows=\"4\"\n              className=\"inputsText\"\n              value={description}\n              onChange={(e) => setdescription(e.target.value)}\n            ></textarea>\n          </div>\n          <div>\n            <label className=\"label\">News Category</label>\n            <br />\n            <Controller\n              control={control}\n              name=\"category\"\n              defaultValue=\"false\"\n              inputRef={register()}\n              render={({ field: { onChange } }) => (\n                <Autocomplete\n                  id=\"custom-input-demo\"\n                  options={category.map((itm) => itm.name)}\n                  onChange={(event, newValue) => onChange(newValue)}\n                  renderInput={(params) => (\n                    <div\n                      ref={params.InputProps.ref}\n                      style={{\n                        width: '100%',\n                        borderRadius: '4px',\n                        border: '1px solid darkgray',\n                      }}\n                    >\n                      <input\n                        placeholder=\"Select\"\n                        {...params.inputProps}\n                        className=\"autoCompletes\"\n                      />\n                      <KeyboardArrowDownIcon />\n                    </div>\n                  )}\n                />\n              )}\n            />\n          </div>\n          <div>\n            <label className=\"label\">News Speciality</label>\n            <br />\n            <Controller\n              control={control}\n              name=\"speciality\"\n              defaultValue=\"false\"\n              inputRef={register()}\n              render={({ field: { onChange } }) => (\n                <Autocomplete\n                  id=\"custom-input-demo\"\n                  options={speciality.map((itm) => itm.name)}\n                  onChange={(event, newValue) => onChange(newValue)}\n                  renderInput={(params) => (\n                    <div\n                      ref={params.InputProps.ref}\n                      style={{\n                        width: '100%',\n                        borderRadius: '4px',\n                        border: '1px solid darkgray',\n                      }}\n                    >\n                      <input\n                        placeholder=\"Select\"\n                        {...params.inputProps}\n                        className=\"autoCompletes\"\n                      />\n                      <KeyboardArrowDownIcon />\n                    </div>\n                  )}\n                />\n              )}\n            />\n          </div>\n          <div>\n            <label className=\"label\">News Reporter</label>\n            <br />\n            <Controller\n              control={control}\n              name=\"reporter\"\n              defaultValue=\"false\"\n              inputRef={register()}\n              render={({ field: { onChange } }) => (\n                <Autocomplete\n                  id=\"custom-input-demo\"\n                  options={editor.map((itm) => itm.username)}\n                  onChange={(event, newValue) => onChange(newValue)}\n                  renderInput={(params) => (\n                    <div\n                      ref={params.InputProps.ref}\n                      style={{\n                        width: '100%',\n                        borderRadius: '4px',\n                        border: '1px solid darkgray',\n                      }}\n                    >\n                      <input\n                        placeholder=\"Select\"\n                        {...params.inputProps}\n                        className=\"autoCompletes\"\n                      />\n                      <KeyboardArrowDownIcon />\n                    </div>\n                  )}\n                />\n              )}\n            />\n          </div>\n          <div>\n            <label className=\"label\">Video Link</label>\n            <br />\n            <input\n              placeholder=\"Paste here\"\n              className=\"inputs\"\n              value={video}\n              onChange={(e) => setvideo(e.target.value)}\n            />\n          </div>\n          <div>\n            <label className=\"label\">Images</label>\n            <br />\n            <input type=\"file\" onChange={onFileChange} />\n          </div>\n          <div className=\"switch\">\n            <div>\n              <label className=\"label2\">Publish/Unpublish</label>\n            </div>\n            <div style={{ marginTop: '23px' }}>\n              <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\n                <Grid item>\n                  <AntSwitch name=\"publish\" checked={state1} onChange={handleChange1} />\n                </Grid>\n              </Grid>\n            </div>\n          </div>\n          <div className=\"switch\">\n            <div>\n              <label className=\"label2\">Breaking News</label>\n            </div>\n            <div style={{ marginTop: '23px' }}>\n              <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\n                <Grid item>\n                  <AntSwitch name=\"breaking\" checked={state} onChange={handleChange} />\n                </Grid>\n              </Grid>\n            </div>\n          </div>\n          <div>\n            <Button\n              style={{ marginTop: '25px', backgroundColor: 'green', color: 'white' }}\n              variant=\"contained\"\n              type=\"submit\"\n            >\n              Update\n            </Button>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nEditNews.propTypes = {\n  setDirect: PropTypes.node.isRequired,\n  newsId: PropTypes.node.isRequired,\n}\n"]},"metadata":{},"sourceType":"module"}