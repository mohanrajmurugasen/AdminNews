{"ast":null,"code":"import React from'react';import{NavLink,useLocation}from'react-router-dom';import{CBadge}from'@coreui/react';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{createElement as _createElement}from\"react\";export const AppSidebarNav=_ref=>{let{items}=_ref;const location=useLocation();const navLink=(name,icon,badge)=>{return/*#__PURE__*/_jsxs(_Fragment,{children:[icon&&icon,name&&name,badge&&/*#__PURE__*/_jsx(CBadge,{color:badge.color,className:\"ms-auto\",children:badge.text})]});};const navItem=(item,index)=>{const{component,name,badge,icon,...rest}=item;const Component=component;return/*#__PURE__*/_createElement(Component,{...(rest.to&&!rest.items&&{component:NavLink,activeClassName:'active'}),key:index,...rest},navLink(name,icon,badge));};const navGroup=(item,index)=>{var _item$items;const{component,name,icon,to,...rest}=item;const Component=component;return/*#__PURE__*/_jsx(Component,{idx:String(index),toggler:navLink(name,icon),visible:location.pathname.startsWith(to),...rest,children:(_item$items=item.items)===null||_item$items===void 0?void 0:_item$items.map((item,index)=>item.items?navGroup(item,index):navItem(item,index))},index);};return/*#__PURE__*/_jsx(React.Fragment,{children:items&&items.map((item,index)=>item.items?navGroup(item,index):navItem(item,index))});};","map":{"version":3,"sources":["/Users/apple/Desktop/Projects/NewsApplication/AdminNews/src/components/AppSidebarNav.js"],"names":["React","NavLink","useLocation","CBadge","AppSidebarNav","items","location","navLink","name","icon","badge","color","text","navItem","item","index","component","rest","Component","to","activeClassName","navGroup","String","pathname","startsWith","map"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,CAAkBC,WAAlB,KAAqC,kBAArC,CAGA,OAASC,MAAT,KAAuB,eAAvB,C,gMAEA,MAAO,MAAMC,CAAAA,aAAa,CAAG,MAAe,IAAd,CAAEC,KAAF,CAAc,MAC1C,KAAMC,CAAAA,QAAQ,CAAGJ,WAAW,EAA5B,CACA,KAAMK,CAAAA,OAAO,CAAG,CAACC,IAAD,CAAOC,IAAP,CAAaC,KAAb,GAAuB,CACrC,mBACE,2BACGD,IAAI,EAAIA,IADX,CAEGD,IAAI,EAAIA,IAFX,CAGGE,KAAK,eACJ,KAAC,MAAD,EAAQ,KAAK,CAAEA,KAAK,CAACC,KAArB,CAA4B,SAAS,CAAC,SAAtC,UACGD,KAAK,CAACE,IADT,EAJJ,GADF,CAWD,CAZD,CAcA,KAAMC,CAAAA,OAAO,CAAG,CAACC,IAAD,CAAOC,KAAP,GAAiB,CAC/B,KAAM,CAAEC,SAAF,CAAaR,IAAb,CAAmBE,KAAnB,CAA0BD,IAA1B,CAAgC,GAAGQ,IAAnC,EAA4CH,IAAlD,CACA,KAAMI,CAAAA,SAAS,CAAGF,SAAlB,CACA,mBACE,eAAC,SAAD,MACOC,IAAI,CAACE,EAAL,EACH,CAACF,IAAI,CAACZ,KADH,EACY,CACbW,SAAS,CAAEf,OADE,CAEbmB,eAAe,CAAE,QAFJ,CAFnB,EAME,GAAG,CAAEL,KANP,IAOME,IAPN,EASGV,OAAO,CAACC,IAAD,CAAOC,IAAP,CAAaC,KAAb,CATV,CADF,CAaD,CAhBD,CAiBA,KAAMW,CAAAA,QAAQ,CAAG,CAACP,IAAD,CAAOC,KAAP,GAAiB,iBAChC,KAAM,CAAEC,SAAF,CAAaR,IAAb,CAAmBC,IAAnB,CAAyBU,EAAzB,CAA6B,GAAGF,IAAhC,EAAyCH,IAA/C,CACA,KAAMI,CAAAA,SAAS,CAAGF,SAAlB,CACA,mBACE,KAAC,SAAD,EACE,GAAG,CAAEM,MAAM,CAACP,KAAD,CADb,CAGE,OAAO,CAAER,OAAO,CAACC,IAAD,CAAOC,IAAP,CAHlB,CAIE,OAAO,CAAEH,QAAQ,CAACiB,QAAT,CAAkBC,UAAlB,CAA6BL,EAA7B,CAJX,IAKMF,IALN,uBAOGH,IAAI,CAACT,KAPR,sCAOG,YAAYoB,GAAZ,CAAgB,CAACX,IAAD,CAAOC,KAAP,GACfD,IAAI,CAACT,KAAL,CAAagB,QAAQ,CAACP,IAAD,CAAOC,KAAP,CAArB,CAAqCF,OAAO,CAACC,IAAD,CAAOC,KAAP,CAD7C,CAPH,EAEOA,KAFP,CADF,CAaD,CAhBD,CAkBA,mBACE,KAAC,KAAD,CAAO,QAAP,WACGV,KAAK,EACJA,KAAK,CAACoB,GAAN,CAAU,CAACX,IAAD,CAAOC,KAAP,GAAkBD,IAAI,CAACT,KAAL,CAAagB,QAAQ,CAACP,IAAD,CAAOC,KAAP,CAArB,CAAqCF,OAAO,CAACC,IAAD,CAAOC,KAAP,CAAxE,CAFJ,EADF,CAMD,CAzDM","sourcesContent":["import React from 'react'\nimport { NavLink, useLocation } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nimport { CBadge } from '@coreui/react'\n\nexport const AppSidebarNav = ({ items }) => {\n  const location = useLocation()\n  const navLink = (name, icon, badge) => {\n    return (\n      <>\n        {icon && icon}\n        {name && name}\n        {badge && (\n          <CBadge color={badge.color} className=\"ms-auto\">\n            {badge.text}\n          </CBadge>\n        )}\n      </>\n    )\n  }\n\n  const navItem = (item, index) => {\n    const { component, name, badge, icon, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        {...(rest.to &&\n          !rest.items && {\n            component: NavLink,\n            activeClassName: 'active',\n          })}\n        key={index}\n        {...rest}\n      >\n        {navLink(name, icon, badge)}\n      </Component>\n    )\n  }\n  const navGroup = (item, index) => {\n    const { component, name, icon, to, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        idx={String(index)}\n        key={index}\n        toggler={navLink(name, icon)}\n        visible={location.pathname.startsWith(to)}\n        {...rest}\n      >\n        {item.items?.map((item, index) =>\n          item.items ? navGroup(item, index) : navItem(item, index),\n        )}\n      </Component>\n    )\n  }\n\n  return (\n    <React.Fragment>\n      {items &&\n        items.map((item, index) => (item.items ? navGroup(item, index) : navItem(item, index)))}\n    </React.Fragment>\n  )\n}\n\nAppSidebarNav.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\n}\n"]},"metadata":{},"sourceType":"module"}