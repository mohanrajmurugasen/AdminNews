{"version":3,"file":"static/js/24.11b4d5b2.chunk.js","mappings":"sKAEA,IAFgB,8B,sDCQhB,MAAMA,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,SAExCC,EAAYC,IAAAA,OAAa,CAC7BC,QAASA,EAAAA,EACTC,QAAS,CACPC,eAAgBT,EAAQA,EAAMA,MAAQ,QAI1C,O,6ICMA,MAAMU,GAAYC,EAAAA,EAAAA,IAAYC,IAAD,CAC3BC,MAAO,CACLC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAElBC,MAAO,CACLC,gBAAiBN,EAAMO,QAAQC,WAAWH,MAC1CI,OAAQ,iBACRC,UAAWV,EAAMW,QAAQ,GACzBC,QAASZ,EAAMa,QAAQ,EAAG,EAAG,QAgIjC,UA5Hc,KACZ,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,UAClCC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,OAEnCG,EAAUrB,KACTsB,EAAMC,GAAWC,EAAAA,UAAe,GA2BvC,OACE,iBAAKC,UAAU,yDAAf,WACE,SAAC,KAAD,WACE,SAAC,KAAD,CAAMA,UAAU,yBAAhB,UACE,SAAC,KAAD,CAAMC,GAAI,EAAV,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOD,UAAU,MAAjB,UACE,SAAC,KAAD,WACE,UAAC,KAAD,YACE,mCACA,cAAGA,UAAU,uBAAb,sCACA,UAAC,KAAD,CAAaA,UAAU,OAAvB,WACE,SAAC,KAAD,WACE,SAAC,IAAD,CAAOE,KAAMC,EAAAA,OAEf,SAAC,KAAD,CACEC,YAAY,iBACZC,aAAa,WACbC,MAAOf,EACPgB,SAAWC,GAAQhB,EAAYgB,EAAIC,OAAOH,aAG9C,UAAC,KAAD,CAAaN,UAAU,OAAvB,WACE,SAAC,KAAD,WACE,SAAC,IAAD,CAAOE,KAAMQ,EAAAA,OAEf,SAAC,KAAD,CACEC,KAAK,WACLP,YAAY,WACZC,aAAa,mBACbC,MAAOZ,EACPa,SAAWC,GAAQb,EAAYa,EAAIC,OAAOH,aAG9C,UAAC,KAAD,YACE,SAAC,KAAD,CAAMM,GAAI,EAAV,UACE,SAAC,KAAD,CAASC,MAAM,UAAUb,UAAU,OAAOc,QAvDjD,KACb,MAAMC,EAAU,GAChBA,EAAQxB,SAAWA,EACnBwB,EAAQrB,SAAWA,EACnBxB,EAAAA,EAAAA,KACQ,SAAU6C,GACfC,MAAMC,IACY,mBAAbA,EAAIC,MAA0C,sBAAbD,EAAIC,MAEvClD,aAAamD,QAAQ,OAAQrD,KAAKsD,UAAUH,EAAIC,OAChDG,OAAOC,SAASC,KAAO,KAf7BzB,GAAQ,MAoBL0B,OAAOC,IACNC,MAAMD,EAAIE,aAuCM,sBAIF,SAAC,KAAD,CAAMf,GAAI,EAAGZ,UAAU,aAAvB,UACE,SAAC,KAAD,CAASa,MAAM,OAAOb,UAAU,OAAhC,2CAQV,SAAC,KAAD,CAAOA,UAAU,6BAA6B4B,MAAO,CAAEC,MAAO,QAA9D,UACE,SAAC,KAAD,CAAW7B,UAAU,cAArB,UACE,4BACE,qCACA,yKAgBd,SAAC,IAAD,CACE,kBAAgB,yBAChB,mBAAiB,+BACjBA,UAAWJ,EAAQlB,MACnBmB,KAAMA,EACNiC,QAhGc,KAClBhC,GAAQ,IAgGJiC,sBAAoB,EACpBC,kBAAmBC,EAAAA,EACnBC,cAAe,CACbC,QAAS,KATb,UAYE,SAAC,IAAD,CAAMC,GAAIvC,EAAV,UACE,iBAAKG,UAAWJ,EAAQd,MAAxB,WACE,eAAIuD,GAAG,yBAAP,8CACA,cAAGA,GAAG,+BAAN","sources":["interceptors/baseurl.js","interceptors/interceptor.js","views/pages/login/Login.js"],"sourcesContent":["const baseURL = 'http://3.137.162.208:5000/'\n\nexport default baseURL\n","import axios from 'axios'\nimport baseURL from './baseurl'\n\n// const baseURL = process.env.NODE_ENV\n// ? ''\n// : 'http://localhost:4000/';\n\n// const baseURL = 'http://localhost:5000/'\nconst token = JSON.parse(localStorage.getItem('auth'))\n\nconst authAxios = axios.create({\n  baseURL: baseURL,\n  headers: {\n    Authentication: token ? token.token : null,\n  },\n})\n\nexport default authAxios\n","import React, { useState } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilLockLocked, cilUser } from '@coreui/icons'\n// import { useHistory } from 'react-router'\nimport authAxios from 'src/interceptors/interceptor'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Modal from '@material-ui/core/Modal'\nimport Backdrop from '@material-ui/core/Backdrop'\nimport Fade from '@material-ui/core/Fade'\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}))\n\nconst Login = () => {\n  const [username, setusername] = useState('admin')\n  const [password, setPassword] = useState('123')\n  // const history = useHistory()\n  const classes = useStyles()\n  const [open, setOpen] = React.useState(false)\n\n  const handleOpen = () => {\n    setOpen(true)\n  }\n  const handleClose = () => {\n    setOpen(false)\n  }\n  const submit = () => {\n    const collect = {}\n    collect.username = username\n    collect.password = password\n    authAxios\n      .post('logins', collect)\n      .then((res) => {\n        if (res.data !== 'User not exist' && res.data !== 'Password mismatch') {\n          // console.log(res.data.token)\n          localStorage.setItem('auth', JSON.stringify(res.data))\n          window.location.href = '/'\n        } else {\n          handleOpen()\n        }\n      })\n      .catch((err) => {\n        alert(err.message)\n      })\n  }\n  return (\n    <div className=\"bg-light min-vh-100 d-flex flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md={8}>\n            <CCardGroup>\n              <CCard className=\"p-4\">\n                <CCardBody>\n                  <CForm>\n                    <h1>Login</h1>\n                    <p className=\"text-medium-emphasis\">Sign In to your account</p>\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupText>\n                        <CIcon icon={cilUser} />\n                      </CInputGroupText>\n                      <CFormInput\n                        placeholder=\"Enter Username\"\n                        autoComplete=\"username\"\n                        value={username}\n                        onChange={(txt) => setusername(txt.target.value)}\n                      />\n                    </CInputGroup>\n                    <CInputGroup className=\"mb-4\">\n                      <CInputGroupText>\n                        <CIcon icon={cilLockLocked} />\n                      </CInputGroupText>\n                      <CFormInput\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        autoComplete=\"current-password\"\n                        value={password}\n                        onChange={(txt) => setPassword(txt.target.value)}\n                      />\n                    </CInputGroup>\n                    <CRow>\n                      <CCol xs={6}>\n                        <CButton color=\"primary\" className=\"px-4\" onClick={submit}>\n                          Login\n                        </CButton>\n                      </CCol>\n                      <CCol xs={6} className=\"text-right\">\n                        <CButton color=\"link\" className=\"px-0\">\n                          Forgot password?\n                        </CButton>\n                      </CCol>\n                    </CRow>\n                  </CForm>\n                </CCardBody>\n              </CCard>\n              <CCard className=\"text-white bg-primary py-5\" style={{ width: '100%' }}>\n                <CCardBody className=\"text-center\">\n                  <div>\n                    <h2>Sign up</h2>\n                    <p>\n                      Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod\n                      tempor incididunt ut labore et dolore magna aliqua.\n                    </p>\n                    {/* <Link to=\"/register\">\n                      <CButton color=\"primary\" className=\"mt-3\" active tabIndex={-1}>\n                        Register Now!\n                      </CButton>\n                    </Link> */}\n                  </div>\n                </CCardBody>\n              </CCard>\n            </CCardGroup>\n          </CCol>\n        </CRow>\n      </CContainer>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <div className={classes.paper}>\n            <h2 id=\"transition-modal-title\">Username and Password incorrect</h2>\n            <p id=\"transition-modal-description\">Please enter valid details</p>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  )\n}\n\nexport default Login\n"],"names":["token","JSON","parse","localStorage","getItem","authAxios","axios","baseURL","headers","Authentication","useStyles","makeStyles","theme","modal","display","alignItems","justifyContent","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","username","setusername","useState","password","setPassword","classes","open","setOpen","React","className","md","icon","cilUser","placeholder","autoComplete","value","onChange","txt","target","cilLockLocked","type","xs","color","onClick","collect","then","res","data","setItem","stringify","window","location","href","catch","err","alert","message","style","width","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","in","id"],"sourceRoot":""}